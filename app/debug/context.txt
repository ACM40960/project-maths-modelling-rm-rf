[the LLM report generation.ipynb:cell_0] from dotenv import load_dotenv
import os
from openai import OpenAI

# Load environment variables from .env file
load_dotenv()

# Now read the key from environment
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

response = client.chat.completions.create(
    model="gpt-3.5-turbo",
    messages=[
        {"role": "system", "content": "You are a very experienced financial analyst."},
        {"role": "user", "content":
            (
                "We have a customer credit risk model that predicts the probability of default (PD), "
                "and we also have SHAP explainability values showing the feature contributions. "
                "You will be given the model's PD predictio

[the meta.yaml:1-7] destination_id: m-301fab49a5524903b76d55b6597c2de7
destination_type: MODEL_OUTPUT
source_id: m-301fab49a5524903b76d55b6597c2de7
source_type: RUN_OUTPUT
step: 0
tags: {}


[the python_env.yaml:1-8] python: 3.13.5
build_dependencies:
- pip==25.0.1
- setuptools==80.8.0
- wheel
dependencies:
- -r requirements.txt


[the meta.yaml:1-10] aliases:
  production: '2'
  withupdatedpipeling: '2'
creation_timestamp: 1751497581443
deployment_job_id: null
deployment_job_state: null
description: ''
last_updated_timestamp: 1751501077088
name: Credit Risk Model


[the eda.ipynb:cell_31] All class overlap, let try getting some feature from this variables

[the requirements.txt:1-10] pyodbc
numpy
pandas
matplotlib
seaborn
scipy
scikit-learn
openpyxl
sqlalchemy


[the Data_Cleaning -checkpoint.ipynb:cell_12] ### Missing NAME_TYPE_SUITE is filled with Unspecified

[the eda.ipynb:cell_47] Here I am assuming, the user will be porviding flag doc 1 whoch mandatory but aprat from that how many docs porvided but the field looks very very low variance

However, creating a new field bianry which says if additional_doc_provided, and delete all other values to decreas esaprsity

[the Data Cleaning.ipynb:cell_16] The dataset originally includes three external rating features:

- `EXT_SOURCE_1`
- `EXT_SOURCE_2`
- `EXT_SOURCE_3`

However, during the **SQL preprocessing stage**, we created a new feature:  
**`AVERAGE_EXTERNAL_RATING`** â€” the average of all available EXT_SOURCE values.